// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class ListInputRequest private constructor(builder: Builder) {
    val blobList: List<ByteArray>? = builder.blobList
    val enumList: List<MyEnum>? = builder.enumList
    val intList: List<Int>? = builder.intList
    val nestedIntList: List<List<Int>>? = builder.nestedIntList
    val nestedMapList: List<Map<String, Int>>? = builder.nestedMapList
    val structList: List<Nested>? = builder.structList

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.ListInputRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ListInputRequest(")
        append("blobList=$blobList,")
        append("enumList=$enumList,")
        append("intList=$intList,")
        append("nestedIntList=$nestedIntList,")
        append("nestedMapList=$nestedMapList,")
        append("structList=$structList)")
    }

    override fun hashCode(): kotlin.Int {
        var result = blobList?.hashCode() ?: 0
        result = 31 * result + (enumList?.hashCode() ?: 0)
        result = 31 * result + (intList?.hashCode() ?: 0)
        result = 31 * result + (nestedIntList?.hashCode() ?: 0)
        result = 31 * result + (nestedMapList?.hashCode() ?: 0)
        result = 31 * result + (structList?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ListInputRequest

        if (blobList != other.blobList) return false
        if (enumList != other.enumList) return false
        if (intList != other.intList) return false
        if (nestedIntList != other.nestedIntList) return false
        if (nestedMapList != other.nestedMapList) return false
        if (structList != other.structList) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.ListInputRequest = Builder(this).apply(block).build()

    class Builder {
        var blobList: List<ByteArray>? = null
        var enumList: List<MyEnum>? = null
        var intList: List<Int>? = null
        var nestedIntList: List<List<Int>>? = null
        var nestedMapList: List<Map<String, Int>>? = null
        var structList: List<Nested>? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.ListInputRequest) : this() {
            this.blobList = x.blobList
            this.enumList = x.enumList
            this.intList = x.intList
            this.nestedIntList = x.nestedIntList
            this.nestedMapList = x.nestedMapList
            this.structList = x.structList
        }

        @PublishedApi
        internal fun build(): com.test.model.ListInputRequest = ListInputRequest(this)
    }
}
