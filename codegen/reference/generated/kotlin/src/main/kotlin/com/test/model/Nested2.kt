// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class Nested2 private constructor(builder: Builder) {
    val moreNesting: com.test.model.Nested3? = builder.moreNesting

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.Nested2 = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Nested2(")
        append("moreNesting=$moreNesting)")
    }

    override fun hashCode(): kotlin.Int {
        var result = moreNesting?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as Nested2

        if (moreNesting != other.moreNesting) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.Nested2 = Builder(this).apply(block).build()

    class Builder {
        var moreNesting: com.test.model.Nested3? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.Nested2) : this() {
            this.moreNesting = x.moreNesting
        }

        @PublishedApi
        internal fun build(): com.test.model.Nested2 = Nested2(this)

        /**
         * construct an [com.test.model.Nested3] inside the given [block]
         */
        fun moreNesting(block: com.test.model.Nested3.Builder.() -> kotlin.Unit) {
            this.moreNesting = com.test.model.Nested3.invoke(block)
        }
    }
}
