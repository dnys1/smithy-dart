{
    "smithy": "1.0",
    "shapes": {
        "smithy.waiters#Acceptor": {
            "type": "structure",
            "members": {
                "state": {
                    "target": "smithy.waiters#AcceptorState",
                    "traits": {
                        "smithy.api#documentation": "The state the acceptor transitions to when matched.",
                        "smithy.api#required": {}
                    }
                },
                "matcher": {
                    "target": "smithy.waiters#Matcher",
                    "traits": {
                        "smithy.api#documentation": "The matcher used to test if the resource is in a given state.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Represents an acceptor in a waiter's state machine.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#AcceptorState": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "The transition state of a waiter.",
                "smithy.api#enum": [
                    {
                        "value": "success",
                        "name": "SUCCESS",
                        "documentation": "The waiter successfully finished waiting. This is a terminal\nstate that causes the waiter to stop."
                    },
                    {
                        "value": "failure",
                        "name": "FAILURE",
                        "documentation": "The waiter failed to enter into the desired state. This is a\nterminal state that causes the waiter to stop."
                    },
                    {
                        "value": "retry",
                        "name": "RETRY",
                        "documentation": "The waiter will retry the operation. This state transition is\nimplicit if no accepter causes a state transition."
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#Acceptors": {
            "type": "list",
            "member": {
                "target": "smithy.waiters#Acceptor"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.test#AppliesTo": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "client",
                        "name": "CLIENT",
                        "documentation": "The test only applies to client implementations."
                    },
                    {
                        "value": "server",
                        "name": "SERVER",
                        "documentation": "The test only applies to server implementations."
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.api#ArnNamespace": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[a-z0-9.\\-]{1,63}$",
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithm": {
            "type": "string",
            "traits": {
                "smithy.api#enum": [
                    {
                        "value": "CRC32C",
                        "name": "CRC32C"
                    },
                    {
                        "value": "CRC32",
                        "name": "CRC32"
                    },
                    {
                        "value": "SHA1",
                        "name": "SHA1"
                    },
                    {
                        "value": "SHA256",
                        "name": "SHA256"
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "aws.protocols#ChecksumAlgorithmSet": {
            "type": "set",
            "member": {
                "target": "aws.protocols#ChecksumAlgorithm"
            },
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "example.weather#City": {
            "type": "resource",
            "identifiers": {
                "cityId": {
                    "target": "example.weather#CityId"
                }
            },
            "read": {
                "target": "example.weather#GetCity"
            },
            "list": {
                "target": "example.weather#ListCities"
            },
            "resources": [
                {
                    "target": "example.weather#Forecast"
                }
            ]
        },
        "example.weather#CityCoordinates": {
            "type": "structure",
            "members": {
                "latitude": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "longitude": {
                    "target": "smithy.api#Float",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "example.weather#CityId": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Za-z0-9 ]+$"
            }
        },
        "example.weather#CitySummaries": {
            "type": "list",
            "member": {
                "target": "example.weather#CitySummary"
            }
        },
        "example.weather#CitySummary": {
            "type": "structure",
            "members": {
                "cityId": {
                    "target": "example.weather#CityId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#references": [
                    {
                        "resource": "example.weather#City"
                    }
                ]
            }
        },
        "aws.api#CloudFormationName": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Z][A-Za-z0-9]+$",
                "smithy.api#private": {}
            }
        },
        "example.weather#Forecast": {
            "type": "resource",
            "identifiers": {
                "cityId": {
                    "target": "example.weather#CityId"
                }
            },
            "read": {
                "target": "example.weather#GetForecast"
            }
        },
        "example.weather#GetCity": {
            "type": "operation",
            "input": {
                "target": "example.weather#GetCityInput"
            },
            "output": {
                "target": "example.weather#GetCityOutput"
            },
            "errors": [
                {
                    "target": "example.weather#NoSuchResource"
                }
            ],
            "traits": {
                "smithy.api#readonly": {}
            }
        },
        "example.weather#GetCityInput": {
            "type": "structure",
            "members": {
                "cityId": {
                    "target": "example.weather#CityId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "example.weather#GetCityOutput": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "coordinates": {
                    "target": "example.weather#CityCoordinates",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "example.weather#GetCurrentTime": {
            "type": "operation",
            "output": {
                "target": "example.weather#GetCurrentTimeOutput"
            },
            "traits": {
                "smithy.api#readonly": {}
            }
        },
        "example.weather#GetCurrentTimeOutput": {
            "type": "structure",
            "members": {
                "time": {
                    "target": "smithy.api#Timestamp",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "example.weather#GetForecast": {
            "type": "operation",
            "input": {
                "target": "example.weather#GetForecastInput"
            },
            "output": {
                "target": "example.weather#GetForecastOutput"
            },
            "traits": {
                "smithy.api#readonly": {}
            }
        },
        "example.weather#GetForecastInput": {
            "type": "structure",
            "members": {
                "cityId": {
                    "target": "example.weather#CityId",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "example.weather#GetForecastOutput": {
            "type": "structure",
            "members": {
                "chanceOfRain": {
                    "target": "smithy.api#Float"
                }
            }
        },
        "smithy.test#HttpMalformedRequestDefinition": {
            "type": "structure",
            "members": {
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the serialized query string parameters to include in the request.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of HTTP headers to include in the request"
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The HTTP message body to include in the request"
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpMalformedRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "request": {
                    "target": "smithy.test#HttpMalformedRequestDefinition",
                    "traits": {
                        "smithy.api#documentation": "The malformed request to send.",
                        "smithy.api#required": {}
                    }
                },
                "response": {
                    "target": "smithy.test#HttpMalformedResponseDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response.",
                        "smithy.api#required": {}
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "testParameters": {
                    "target": "smithy.test#HttpMalformedRequestTestParametersDefinition",
                    "traits": {
                        "smithy.api#documentation": "An optional set of test parameters for parameterized testing."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedRequestTestParametersDefinition": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.test#StringList"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyAssertion": {
            "type": "union",
            "members": {
                "contents": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the expected serialized response body, which will be matched\nexactly."
                    }
                },
                "messageRegex": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A regex to evaluate against the `message` field in the body. For\nresponses that may have some variance from platform to platform,\nsuch as those that include messages from a parser."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseBodyDefinition": {
            "type": "structure",
            "members": {
                "assertion": {
                    "target": "smithy.test#HttpMalformedResponseBodyAssertion",
                    "traits": {
                        "smithy.api#documentation": "The assertion to execute against the response body.",
                        "smithy.api#required": {}
                    }
                },
                "mediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the response body.\n\nThis is used to help test runners to parse and evaluate\n`contents' and `messageRegex` in the assertion",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpMalformedResponseDefinition": {
            "type": "structure",
            "members": {
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored."
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "body": {
                    "target": "smithy.test#HttpMalformedResponseBodyDefinition",
                    "traits": {
                        "smithy.api#documentation": "The expected response body."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpRequestTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpRequestTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The name of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "method": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected serialized HTTP request method.",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "uri": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The request-target of the HTTP request, not including\nthe query string (for example, \"/foo/bar\").",
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                },
                "host": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint provided to the client, not including the path\nor scheme (for example, \"example.com\")."
                    }
                },
                "resolvedHost": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The host / endpoint that the client should send to, not including\nthe path or scheme (for example, \"prefix.example.com\").\n\nThis can differ from the host provided to the client if the `hostPrefix`\nmember of the `endpoint` trait is set, for instance."
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's\npossible that specific authentication schemes might influence\nthe serialization logic of an HTTP request.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "queryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the expected serialized query string parameters.\n\nEach element in the list is a query string key value pair\nthat starts with the query string parameter name optionally\nfollowed by \"=\", optionally followed by the query string\nparameter value. For example, \"foo=bar\", \"foo=\", and \"foo\"\nare all valid values. The query string parameter name and\nthe value MUST appear in the format in which it is expected\nto be sent over the wire; if a key or value needs to be\npercent-encoded, then it MUST appear percent-encoded in this list.\n\nA serialized HTTP request is not in compliance with the protocol\nif any query string parameter defined in `queryParams` is not\ndefined in the request or if the value of a query string parameter\nin the request differs from the expected value.\n\n`queryParams` applies no constraints on additional query parameters."
                    }
                },
                "forbidQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that must not appear in the\nserialized HTTP request.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "requireQueryParams": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of query string parameter names that MUST appear in the\nserialized request URI, but no assertion is made on the value.\n\nEach value MUST appear in the format in which it is sent over the\nwire; if a key needs to be percent-encoded, then it MUST appear\npercent-encoded in this list."
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "Defines a map of expected HTTP headers.\n\nHeaders that are not listed in this map are ignored unless they are\nexplicitly forbidden through `forbidHeaders`."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear in the serialized\nHTTP request."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected HTTP message body.\n\nIf no request body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the input parameters used to generated the HTTP request.\n\nThese parameters MUST be compatible with the input of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nrequest. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#HttpResponseTestCase": {
            "type": "structure",
            "members": {
                "id": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The identifier of the test case. This identifier can be used by\nprotocol test implementations to filter out unsupported test\ncases by ID, to generate test case names, etc. The provided `id`\nMUST match Smithy's `identifier` ABNF. No two `httpResponseTests`\ntest cases can share the same ID.",
                        "smithy.api#pattern": "^[A-Za-z_][A-Za-z0-9_]+$",
                        "smithy.api#required": {}
                    }
                },
                "protocol": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The shape ID of the protocol to test.",
                        "smithy.api#idRef": {
                            "selector": "[trait|protocolDefinition]",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "code": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP response code.",
                        "smithy.api#range": {
                            "min": 100,
                            "max": 599
                        },
                        "smithy.api#required": {}
                    }
                },
                "authScheme": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The optional authentication scheme shape ID to assume. It's possible\nthat specific authentication schemes might influence the serialization\nlogic of an HTTP response.",
                        "smithy.api#idRef": {
                            "selector": "[trait|authDefinition]",
                            "failWhenMissing": true
                        }
                    }
                },
                "headers": {
                    "target": "smithy.test#StringMap",
                    "traits": {
                        "smithy.api#documentation": "A map of expected HTTP headers. Each key represents a header field\nname and each value represents the expected header value. An HTTP\nresponse is not in compliance with the protocol if any listed header\nis missing from the serialized response or if the expected header\nvalue differs from the serialized response value.\n\n`headers` applies no constraints on additional headers."
                    }
                },
                "forbidHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must not appear."
                    }
                },
                "requireHeaders": {
                    "target": "smithy.test#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of header field names that must appear in the serialized\nHTTP message, but no assertion is made on the value.\n\nHeaders listed in `headers` map do not need to appear in this list."
                    }
                },
                "body": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines the HTTP message body.\n\nIf no response body is defined, then no assertions are made about\nthe body of the message."
                    }
                },
                "bodyMediaType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The media type of the `body`.\n\nThis is used to help test runners to parse and validate the expected\ndata against generated data. Binary media type formats require that\nthe contents of `body` are base64 encoded."
                    }
                },
                "params": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines the output parameters deserialized from the HTTP response.\n\nThese parameters MUST be compatible with the output of the operation."
                    }
                },
                "vendorParams": {
                    "target": "smithy.api#Document",
                    "traits": {
                        "smithy.api#documentation": "Defines vendor-specific parameters that are used to influence the\nresponse. For example, some vendors might utilize environment\nvariables, configuration files on disk, or other means to influence\nthe serialization formats used by clients or servers.\n\nIf a `vendorParamsShape` is set, these parameters MUST be compatible\nwith that shape's definition."
                    }
                },
                "vendorParamsShape": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A shape to be used to validate the `vendorParams` member contents.\n\nIf set, the parameters in `vendorParams` MUST be compatible with this\nshape's definition.",
                        "smithy.api#idRef": {
                            "failWhenMissing": true
                        }
                    }
                },
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A description of the test and what is being asserted."
                    }
                },
                "tags": {
                    "target": "smithy.test#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "Applies a list of tags to the test."
                    }
                },
                "appliesTo": {
                    "target": "smithy.test#AppliesTo",
                    "traits": {
                        "smithy.api#documentation": "Indicates that the test case is only to be implemented by \"client\" or\n\"server\" implementations. This property is useful for identifying and\ntesting edge cases of clients and servers that are impossible or\nundesirable to test in *both* client and server implementations."
                    }
                }
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "example.weather#ListCities": {
            "type": "operation",
            "input": {
                "target": "example.weather#ListCitiesInput"
            },
            "output": {
                "target": "example.weather#ListCitiesOutput"
            },
            "traits": {
                "smithy.api#paginated": {
                    "items": "items"
                },
                "smithy.api#readonly": {}
            }
        },
        "example.weather#ListCitiesInput": {
            "type": "structure",
            "members": {
                "nextToken": {
                    "target": "smithy.api#String"
                },
                "pageSize": {
                    "target": "smithy.api#Integer"
                }
            }
        },
        "example.weather#ListCitiesOutput": {
            "type": "structure",
            "members": {
                "nextToken": {
                    "target": "smithy.api#String"
                },
                "items": {
                    "target": "example.weather#CitySummaries",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            }
        },
        "smithy.waiters#Matcher": {
            "type": "union",
            "members": {
                "output": {
                    "target": "smithy.waiters#PathMatcher",
                    "traits": {
                        "smithy.api#documentation": "Matches on the successful output of an operation using a\nJMESPath expression."
                    }
                },
                "inputOutput": {
                    "target": "smithy.waiters#PathMatcher",
                    "traits": {
                        "smithy.api#documentation": "Matches on both the input and output of an operation using a JMESPath\nexpression. Input parameters are available through the top-level\n`input` field, and output data is available through the top-level\n`output` field. This matcher can only be used on operations that\ndefine both input and output. This matcher is checked only if an\noperation completes successfully."
                    }
                },
                "errorType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Matches if an operation returns an error and the error matches\nthe expected error type. If an absolute shape ID is provided, the\nerror is matched exactly on the shape ID. A shape name can be\nprovided to match an error in any namespace with the given name."
                    }
                },
                "success": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "When set to `true`, matches when an operation returns a successful\nresponse. When set to `false`, matches when an operation fails with\nany error."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines how an acceptor determines if it matches the current state of\na resource.",
                "smithy.api#private": {}
            }
        },
        "example.weather#NoSuchResource": {
            "type": "structure",
            "members": {
                "resourceType": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#error": "client"
            }
        },
        "smithy.waiters#NonEmptyString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.test#NonEmptyString": {
            "type": "string",
            "traits": {
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.waiters#NonEmptyString"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#NonEmptyStringList": {
            "type": "list",
            "member": {
                "target": "smithy.test#NonEmptyString"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#PathComparator": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Defines a comparison to perform in a PathMatcher.",
                "smithy.api#enum": [
                    {
                        "value": "stringEquals",
                        "name": "STRING_EQUALS",
                        "documentation": "Matches if the return value is a string that is equal to the expected string."
                    },
                    {
                        "value": "booleanEquals",
                        "name": "BOOLEAN_EQUALS",
                        "documentation": "Matches if the return value is a boolean that is equal to the string literal 'true' or 'false'."
                    },
                    {
                        "value": "allStringEquals",
                        "name": "ALL_STRING_EQUALS",
                        "documentation": "Matches if all values in the list matches the expected string."
                    },
                    {
                        "value": "anyStringEquals",
                        "name": "ANY_STRING_EQUALS",
                        "documentation": "Matches if any value in the list matches the expected string."
                    }
                ],
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#PathMatcher": {
            "type": "structure",
            "members": {
                "path": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "A JMESPath expression applied to the input or output of an operation.",
                        "smithy.api#required": {}
                    }
                },
                "expected": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The expected return value of the expression.",
                        "smithy.api#required": {}
                    }
                },
                "comparator": {
                    "target": "smithy.waiters#PathComparator",
                    "traits": {
                        "smithy.api#documentation": "The comparator used to compare the result of the expression with the\nexpected value.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines how to test the result of a JMESPath expression against\nan expected value.",
                "smithy.api#private": {}
            }
        },
        "aws.auth#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "aws.protocols#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#StringList": {
            "type": "list",
            "member": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.test#StringMap": {
            "type": "map",
            "key": {
                "target": "smithy.api#String"
            },
            "value": {
                "target": "smithy.api#String"
            },
            "traits": {
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#Waiter": {
            "type": "structure",
            "members": {
                "documentation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Documentation about the waiter. Can use CommonMark."
                    }
                },
                "acceptors": {
                    "target": "smithy.waiters#Acceptors",
                    "traits": {
                        "smithy.api#documentation": "An ordered array of acceptors to check after executing an operation.",
                        "smithy.api#required": {}
                    }
                },
                "minDelay": {
                    "target": "smithy.waiters#WaiterDelay",
                    "traits": {
                        "smithy.api#documentation": "The minimum amount of time in seconds to delay between each retry.\nThis value defaults to 2 if not specified. If specified, this value\nMUST be greater than or equal to 1 and less than or equal to\n`maxDelay`."
                    }
                },
                "maxDelay": {
                    "target": "smithy.waiters#WaiterDelay",
                    "traits": {
                        "smithy.api#documentation": "The maximum amount of time in seconds to delay between each retry.\nThis value defaults to 120 if not specified (or, 2 minutes). If\nspecified, this value MUST be greater than or equal to 1."
                    }
                },
                "deprecated": {
                    "target": "smithy.api#PrimitiveBoolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates if the waiter is considered deprecated. A waiter SHOULD\nbe marked as deprecated if it has been replaced by another waiter or\nif it is no longer needed (for example, if a resource changes from\neventually consistent to strongly consistent)."
                    }
                },
                "tags": {
                    "target": "smithy.waiters#NonEmptyStringList",
                    "traits": {
                        "smithy.api#documentation": "A list of tags associated with the waiter that allow waiters to be\ncategorized and grouped."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Defines an individual operation waiter.",
                "smithy.api#private": {}
            }
        },
        "smithy.waiters#WaiterDelay": {
            "type": "integer",
            "traits": {
                "smithy.api#box": {},
                "smithy.api#range": {
                    "min": 1
                }
            }
        },
        "smithy.waiters#WaiterName": {
            "type": "string",
            "traits": {
                "smithy.api#pattern": "^[A-Z]+[A-Za-z0-9]*$"
            }
        },
        "example.weather#Weather": {
            "type": "service",
            "traits": {
                "smithy.api#documentation": "Provides weather forecasts.",
                "smithy.api#paginated": {
                    "inputToken": "nextToken",
                    "outputToken": "nextToken",
                    "pageSize": "pageSize"
                }
            },
            "version": "2006-03-01",
            "operations": [
                {
                    "target": "example.weather#GetCurrentTime"
                }
            ],
            "resources": [
                {
                    "target": "example.weather#City"
                }
            ]
        },
        "aws.api#arn": {
            "type": "structure",
            "members": {
                "template": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "absolute": {
                    "target": "smithy.api#Boolean"
                },
                "noRegion": {
                    "target": "smithy.api#Boolean"
                },
                "noAccount": {
                    "target": "smithy.api#Boolean"
                }
            },
            "traits": {
                "smithy.api#documentation": "Specifies an ARN template for the resource.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/aws-arns-and-namespaces.html"
                },
                "smithy.api#trait": {
                    "selector": "resource"
                }
            }
        },
        "aws.api#arnReference": {
            "type": "structure",
            "members": {
                "type": {
                    "target": "smithy.api#String"
                },
                "resource": {
                    "target": "smithy.api#String"
                },
                "service": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#documentation": "Marks a string as containing an ARN.",
                "smithy.api#trait": {
                    "selector": "string"
                }
            }
        },
        "aws.protocols#awsJson1_0": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsJson1_1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "An RPC-based protocol that sends JSON payloads. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#awsQuery": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "aws.protocols#awsQueryError",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ],
                    "noInlineDocumentSupport": true
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#awsQueryError": {
            "type": "structure",
            "members": {
                "code": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The value used to distinguish this error shape during serialization.",
                        "smithy.api#required": {}
                    }
                },
                "httpResponseCode": {
                    "target": "smithy.api#Integer",
                    "traits": {
                        "smithy.api#documentation": "The HTTP response code used on a response containing this error shape.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Provides the value in the 'Code' distinguishing field and HTTP response code for an operation error.",
                "smithy.api#tags": [
                    "diff.error.const"
                ],
                "smithy.api#trait": {
                    "selector": "structure [trait|error]"
                }
            }
        },
        "aws.api#clientDiscoveredEndpoint": {
            "type": "structure",
            "members": {
                "required": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that the target operation should use the client's endpoint discovery logic.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#clientEndpointDiscovery": {
            "type": "structure",
            "members": {
                "operation": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the operation that clients should use to discover endpoints for the service.",
                        "smithy.api#idRef": {
                            "selector": "operation",
                            "failWhenMissing": true
                        },
                        "smithy.api#required": {}
                    }
                },
                "error": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Indicates the error that tells clients that the endpoint they are using is no longer valid. This error MUST be bound to any operation bound to the service which is marked with the aws.api#clientDiscoveredEndpoint trait.",
                        "smithy.api#idRef": {
                            "selector": "structure[trait|error]",
                            "failWhenMissing": true
                        },
                        "smithy.api#recommended": {}
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Configures endpoint discovery for the service.",
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#clientEndpointDiscoveryId": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates members of the operation input which should be use to discover endpoints.",
                "smithy.api#trait": {
                    "selector": "operation[trait|aws.api#clientDiscoveredEndpoint] -[input]-> structure > :test(member[trait|required] > string)"
                }
            }
        },
        "aws.auth#cognitoUserPools": {
            "type": "structure",
            "members": {
                "providerArns": {
                    "target": "aws.auth#StringList",
                    "traits": {
                        "smithy.api#documentation": "A list of the Amazon Cognito user pool ARNs. Each element is of this format: arn:aws:cognito-idp:{region}:{account_id}:userpool/{user_pool_id}.",
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {},
                "smithy.api#documentation": "Configures an Amazon Cognito User Pools auth scheme.",
                "smithy.api#internal": {},
                "smithy.api#tags": [
                    "internal"
                ],
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.api#controlPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the control plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#dataPlane"
                    ]
                }
            }
        },
        "aws.api#data": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Designates the target as containing data of a known classification level.",
                "smithy.api#enum": [
                    {
                        "value": "content",
                        "name": "CUSTOMER_CONTENT",
                        "documentation": "Customer content means any software (including machine images), data, text, audio, video or images that customers or any customer end user transfers to AWS for processing, storage or hosting by AWS services in connection with the customer’s accounts and any computational results that customers or any customer end user derive from the foregoing through their use of AWS services."
                    },
                    {
                        "value": "account",
                        "name": "CUSTOMER_ACCOUNT_INFORMATION",
                        "documentation": "Account information means information about customers that customers provide to AWS in connection with the creation or administration of customers’ accounts."
                    },
                    {
                        "value": "usage",
                        "name": "SERVICE_ATTRIBUTES",
                        "documentation": "Service Attributes means service usage data related to a customer’s account, such as resource identifiers, metadata tags, security and access roles, rules, usage policies, permissions, usage statistics, logging data, and analytics."
                    },
                    {
                        "value": "tagging",
                        "name": "TAG_DATA",
                        "documentation": "Designates metadata tags applied to AWS resources."
                    },
                    {
                        "value": "permissions",
                        "name": "PERMISSIONS_DATA",
                        "documentation": "Designates security and access roles, rules, usage policies, and permissions."
                    }
                ],
                "smithy.api#trait": {
                    "selector": ":test(simpleType, collection, structure, union, member)"
                }
            }
        },
        "aws.api#dataPlane": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Defines a service, resource, or operation as operating on the data plane.",
                "smithy.api#trait": {
                    "selector": ":test(service, resource, operation)",
                    "conflicts": [
                        "aws.api#controlPlane"
                    ]
                }
            }
        },
        "aws.protocols#ec2Query": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "An RPC-based protocol that sends 'POST' requests in the body as Amazon EC2 formatted `x-www-form-urlencoded` strings and responses in XML documents. This protocol does not use HTTP binding traits.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "aws.protocols#ec2QueryName",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace",
                        "smithy.api#timestampFormat",
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel"
                    ],
                    "noInlineDocumentSupport": true
                },
                "smithy.api#trait": {
                    "selector": "service [trait|xmlNamespace]"
                }
            }
        },
        "aws.protocols#ec2QueryName": {
            "type": "string",
            "traits": {
                "smithy.api#documentation": "Indicates the serialized name of a structure member when that structure is serialized for the input of an EC2 operation.",
                "smithy.api#pattern": "^[a-zA-Z_][a-zA-Z_0-9-]*$",
                "smithy.api#trait": {
                    "selector": "structure > member"
                }
            }
        },
        "aws.protocols#httpChecksum": {
            "type": "structure",
            "members": {
                "requestAlgorithmMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member that is used to configure request checksum behavior."
                    }
                },
                "requestChecksumRequired": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#documentation": "Indicates an operation requires a checksum in its HTTP request."
                    }
                },
                "requestValidationModeMember": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "Defines a top-level operation input member used to opt-in to response checksum validation."
                    }
                },
                "responseAlgorithms": {
                    "target": "aws.protocols#ChecksumAlgorithmSet",
                    "traits": {
                        "smithy.api#documentation": "Defines the checksum algorithms clients should look for when performing HTTP response checksum validation."
                    }
                }
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation supports checksum validation.",
                "smithy.api#trait": {
                    "selector": "operation :test(-[input]->)"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpMalformedRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpMalformedRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how a malformed HTTP request is rejected by a server given a specific protocol",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                },
                "smithy.api#unstable": {}
            }
        },
        "smithy.test#httpRequestTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpRequestTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP request is serialized given a specific protocol,\nauthentication scheme, and set of input parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "smithy.test#httpResponseTests": {
            "type": "list",
            "member": {
                "target": "smithy.test#HttpResponseTestCase"
            },
            "traits": {
                "smithy.api#documentation": "Define how an HTTP response is serialized given a specific protocol,\nauthentication scheme, and set of output or error parameters.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": ":test(operation, structure[trait|error])"
                }
            }
        },
        "aws.protocols#restJson1": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                }
            },
            "traits": {
                "smithy.api#documentation": "A RESTful protocol that sends JSON in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#jsonName",
                        "smithy.api#timestampFormat"
                    ]
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.protocols#restXml": {
            "type": "structure",
            "members": {
                "http": {
                    "target": "aws.protocols#StringList"
                },
                "eventStreamHttp": {
                    "target": "aws.protocols#StringList"
                },
                "noErrorWrapping": {
                    "target": "smithy.api#Boolean",
                    "traits": {
                        "smithy.api#deprecated": {},
                        "smithy.api#documentation": "Disables the serialization wrapping of error properties in an 'Error' XML element."
                    }
                }
            },
            "traits": {
                "smithy.api#deprecated": {},
                "smithy.api#documentation": "A RESTful protocol that sends XML in structured payloads.",
                "smithy.api#protocolDefinition": {
                    "traits": [
                        "smithy.api#cors",
                        "smithy.api#endpoint",
                        "smithy.api#hostLabel",
                        "smithy.api#http",
                        "smithy.api#httpError",
                        "smithy.api#httpHeader",
                        "smithy.api#httpLabel",
                        "smithy.api#httpPayload",
                        "smithy.api#httpPrefixHeaders",
                        "smithy.api#httpQuery",
                        "smithy.api#httpQueryParams",
                        "smithy.api#httpResponseCode",
                        "smithy.api#xmlAttribute",
                        "smithy.api#xmlFlattened",
                        "smithy.api#xmlName",
                        "smithy.api#xmlNamespace"
                    ],
                    "noInlineDocumentSupport": true
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.customizations#s3UnwrappedXmlOutput": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates the response body from S3 is not wrapped in the aws-restxml-protocol operation-level XML node. Intended to only be used by AWS S3.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "aws.api#service": {
            "type": "structure",
            "members": {
                "sdkId": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#required": {}
                    }
                },
                "arnNamespace": {
                    "target": "aws.api#ArnNamespace"
                },
                "cloudFormationName": {
                    "target": "aws.api#CloudFormationName"
                },
                "cloudTrailEventSource": {
                    "target": "smithy.api#String"
                },
                "endpointPrefix": {
                    "target": "smithy.api#String"
                }
            },
            "traits": {
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#sigv4": {
            "type": "structure",
            "members": {
                "name": {
                    "target": "smithy.api#String",
                    "traits": {
                        "smithy.api#documentation": "The signature version 4 service signing name to use in the credential scope when signing requests. This value SHOULD match the `arnNamespace` property of the `aws.api#service-trait`.",
                        "smithy.api#externalDocumentation": {
                            "Reference": "https://docs.aws.amazon.com/general/latest/gr/sigv4-create-string-to-sign.html"
                        },
                        "smithy.api#length": {
                            "min": 1
                        },
                        "smithy.api#required": {}
                    }
                }
            },
            "traits": {
                "smithy.api#authDefinition": {
                    "traits": [
                        "aws.auth#unsignedPayload"
                    ]
                },
                "smithy.api#documentation": "Signature Version 4 is the process to add authentication information to AWS requests sent by HTTP. For security, most requests to AWS must be signed with an access key, which consists of an access key ID and secret access key. These two keys are commonly referred to as your security credentials.",
                "smithy.api#externalDocumentation": {
                    "Reference": "https://docs.aws.amazon.com/general/latest/gr/signature-version-4.html"
                },
                "smithy.api#trait": {
                    "selector": "service"
                }
            }
        },
        "aws.auth#unsignedPayload": {
            "type": "structure",
            "members": {},
            "traits": {
                "smithy.api#documentation": "Indicates that the request payload of a signed request is not to be used as part of the signature.",
                "smithy.api#trait": {
                    "selector": "operation"
                }
            }
        },
        "smithy.waiters#waitable": {
            "type": "map",
            "key": {
                "target": "smithy.waiters#WaiterName"
            },
            "value": {
                "target": "smithy.waiters#Waiter"
            },
            "traits": {
                "smithy.api#documentation": "Indicates that an operation has various named \"waiters\" that can be used\nto poll a resource until it enters a desired state.",
                "smithy.api#length": {
                    "min": 1
                },
                "smithy.api#trait": {
                    "selector": "operation :not(-[input, output]-> structure > member > union[trait|streaming])"
                }
            }
        }
    }
}
