// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



sealed class MyEnum {

    abstract val value: kotlin.String

    object Variant1 : com.test.model.MyEnum() {
        override val value: kotlin.String = "rawValue1"
        override fun toString(): kotlin.String = value
    }

    object Variant2 : com.test.model.MyEnum() {
        override val value: kotlin.String = "rawValue2"
        override fun toString(): kotlin.String = value
    }

    data class SdkUnknown(override val value: kotlin.String) : com.test.model.MyEnum() {
        override fun toString(): kotlin.String = value
    }

    companion object {
        /**
         * Convert a raw value to one of the sealed variants or [SdkUnknown]
         */
        fun fromValue(str: kotlin.String): com.test.model.MyEnum = when(str) {
            "rawValue1" -> Variant1
            "rawValue2" -> Variant2
            else -> SdkUnknown(str)
        }

        /**
         * Get a list of all possible variants
         */
        fun values(): kotlin.collections.List<com.test.model.MyEnum> = listOf(
            Variant1,
            Variant2
        )
    }
}
