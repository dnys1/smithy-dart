// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class BlobInputRequest private constructor(builder: Builder) {
    val headerMediaType: kotlin.String? = builder.headerMediaType
    val payloadBlob: kotlin.ByteArray? = builder.payloadBlob

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.BlobInputRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("BlobInputRequest(")
        append("headerMediaType=$headerMediaType,")
        append("payloadBlob=$payloadBlob)")
    }

    override fun hashCode(): kotlin.Int {
        var result = headerMediaType?.hashCode() ?: 0
        result = 31 * result + (payloadBlob?.contentHashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as BlobInputRequest

        if (headerMediaType != other.headerMediaType) return false
        if (payloadBlob != null) {
            if (other.payloadBlob == null) return false
            if (!payloadBlob.contentEquals(other.payloadBlob)) return false
        } else if (other.payloadBlob != null) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.BlobInputRequest = Builder(this).apply(block).build()

    class Builder {
        var headerMediaType: kotlin.String? = null
        var payloadBlob: kotlin.ByteArray? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.BlobInputRequest) : this() {
            this.headerMediaType = x.headerMediaType
            this.payloadBlob = x.payloadBlob
        }

        @PublishedApi
        internal fun build(): com.test.model.BlobInputRequest = BlobInputRequest(this)
    }
}
