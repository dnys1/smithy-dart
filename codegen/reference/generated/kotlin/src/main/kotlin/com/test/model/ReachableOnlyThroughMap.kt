// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class ReachableOnlyThroughMap private constructor(builder: Builder) {
    val prop1: kotlin.Int? = builder.prop1

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.ReachableOnlyThroughMap = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ReachableOnlyThroughMap(")
        append("prop1=$prop1)")
    }

    override fun hashCode(): kotlin.Int {
        var result = prop1 ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ReachableOnlyThroughMap

        if (prop1 != other.prop1) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.ReachableOnlyThroughMap = Builder(this).apply(block).build()

    class Builder {
        var prop1: kotlin.Int? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.ReachableOnlyThroughMap) : this() {
            this.prop1 = x.prop1
        }

        @PublishedApi
        internal fun build(): com.test.model.ReachableOnlyThroughMap = ReachableOnlyThroughMap(this)
    }
}
