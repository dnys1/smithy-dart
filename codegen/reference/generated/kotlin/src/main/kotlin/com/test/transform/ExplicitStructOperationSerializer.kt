// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.transform

import aws.smithy.kotlin.runtime.client.ExecutionContext
import aws.smithy.kotlin.runtime.http.HttpBody
import aws.smithy.kotlin.runtime.http.HttpMethod
import aws.smithy.kotlin.runtime.http.content.ByteArrayContent
import aws.smithy.kotlin.runtime.http.operation.HttpSerialize
import aws.smithy.kotlin.runtime.http.request.HttpRequestBuilder
import aws.smithy.kotlin.runtime.http.request.url
import aws.smithy.kotlin.runtime.serde.json.JsonSerializer
import com.test.model.ExplicitStructRequest


internal class ExplicitStructOperationSerializer: HttpSerialize<ExplicitStructRequest> {
    override suspend fun serialize(context: ExecutionContext, input: ExplicitStructRequest): HttpRequestBuilder {
        val builder = HttpRequestBuilder()
        builder.method = HttpMethod.POST

        builder.url {
            path = "/explicit/struct"
        }

        if (input.payload1 != null) {
            val payload = serializeExplicitStructOperationBody(context, input)
            builder.body = ByteArrayContent(payload)
        }
        builder.headers.setMissing("Content-Type", "application/json")
        if (input.payload1 == null) {
            builder.body = ByteArrayContent("{}".encodeToByteArray())
        }
        return builder
    }
}

private fun serializeExplicitStructOperationBody(context: ExecutionContext, input: ExplicitStructRequest): ByteArray {
    val serializer = JsonSerializer()
    input.payload1?.let { serializeNested2Document(serializer, it) }
    return serializer.toByteArray()
}
