// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class NestedEnum private constructor(builder: Builder) {
    val myEnum: com.test.model.MyEnum? = builder.myEnum

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.NestedEnum = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("NestedEnum(")
        append("myEnum=$myEnum)")
    }

    override fun hashCode(): kotlin.Int {
        var result = myEnum?.hashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as NestedEnum

        if (myEnum != other.myEnum) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.NestedEnum = Builder(this).apply(block).build()

    class Builder {
        var myEnum: com.test.model.MyEnum? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.NestedEnum) : this() {
            this.myEnum = x.myEnum
        }

        @PublishedApi
        internal fun build(): com.test.model.NestedEnum = NestedEnum(this)
    }
}
