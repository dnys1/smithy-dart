// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class Nested3 private constructor(builder: Builder) {
    val member1: kotlin.String? = builder.member1
    val member2: kotlin.String? = builder.member2
    val member3: com.test.model.Nested4? = builder.member3

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.Nested3 = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("Nested3(")
        append("member1=$member1,")
        append("member2=$member2,")
        append("member3=$member3)")
    }

    override fun hashCode(): kotlin.Int {
        var result = member1?.hashCode() ?: 0
        result = 31 * result + (member2?.hashCode() ?: 0)
        result = 31 * result + (member3?.hashCode() ?: 0)
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as Nested3

        if (member1 != other.member1) return false
        if (member2 != other.member2) return false
        if (member3 != other.member3) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.Nested3 = Builder(this).apply(block).build()

    class Builder {
        var member1: kotlin.String? = null
        var member2: kotlin.String? = null
        var member3: com.test.model.Nested4? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.Nested3) : this() {
            this.member1 = x.member1
            this.member2 = x.member2
            this.member3 = x.member3
        }

        @PublishedApi
        internal fun build(): com.test.model.Nested3 = Nested3(this)

        /**
         * construct an [com.test.model.Nested4] inside the given [block]
         */
        fun member3(block: com.test.model.Nested4.Builder.() -> kotlin.Unit) {
            this.member3 = com.test.model.Nested4.invoke(block)
        }
    }
}
