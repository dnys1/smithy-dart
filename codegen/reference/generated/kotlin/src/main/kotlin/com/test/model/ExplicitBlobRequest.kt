// Code generated by smithy-kotlin-codegen. DO NOT EDIT!

package com.test.model



class ExplicitBlobRequest private constructor(builder: Builder) {
    val payload1: kotlin.ByteArray? = builder.payload1

    companion object {
        operator fun invoke(block: Builder.() -> kotlin.Unit): com.test.model.ExplicitBlobRequest = Builder().apply(block).build()
    }

    override fun toString(): kotlin.String = buildString {
        append("ExplicitBlobRequest(")
        append("payload1=$payload1)")
    }

    override fun hashCode(): kotlin.Int {
        var result = payload1?.contentHashCode() ?: 0
        return result
    }

    override fun equals(other: kotlin.Any?): kotlin.Boolean {
        if (this === other) return true
        if (other == null || this::class != other::class) return false

        other as ExplicitBlobRequest

        if (payload1 != null) {
            if (other.payload1 == null) return false
            if (!payload1.contentEquals(other.payload1)) return false
        } else if (other.payload1 != null) return false

        return true
    }

    inline fun copy(block: Builder.() -> kotlin.Unit = {}): com.test.model.ExplicitBlobRequest = Builder(this).apply(block).build()

    class Builder {
        var payload1: kotlin.ByteArray? = null

        internal constructor()
        @PublishedApi
        internal constructor(x: com.test.model.ExplicitBlobRequest) : this() {
            this.payload1 = x.payload1
        }

        @PublishedApi
        internal fun build(): com.test.model.ExplicitBlobRequest = ExplicitBlobRequest(this)
    }
}
