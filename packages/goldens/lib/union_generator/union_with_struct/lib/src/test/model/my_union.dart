// Code generated by smithy-dart. DO NOT EDIT!

library example.model.my_union;

import 'package:smithy/smithy.dart' as _i0;
import 'my_struct.dart' as _i1;

/// Really long multi-line
/// Documentation for MyUnion
abstract class MyUnion extends _i0.SmithyUnion<MyUnion> {
  const MyUnion._();

  static MyUnion? fromJson(Map<String, Object?> json) {
    if (json.length != 1) {
      return null;
    }
    final name = json.keys.first;
    final value = json.values.first;
    if (value == null) {
      return null;
    }
    switch (name) {
      case 'bar':
        if (value is! int) {
          return null;
        }
        return MyUnion.bar(value);
      case 'foo':
        if (value is! String) {
          return null;
        }
        return MyUnion.foo(value);
      case 'myStruct':
        if (value is! Map) {
          return null;
        }
        return MyUnion.myStruct(_i1.MyStruct.fromJson(value.cast()));
      default:
        return MyUnion.sdkUnknown(value);
    }
  }

  /// Documentation for bar
  int? get bar => null;
  String? get foo => null;
  _i1.MyStruct? get myStruct => null;

  @override
  Object get value => (bar ?? foo ?? myStruct)!;

  @override
  T? when<T>({
    T Function(int)? bar,
    T Function(String)? foo,
    T Function(_i1.MyStruct)? myStruct,
    T Function(Object)? sdkUnknown,
  }) {
    if (this is _MyUnionBar) {
      return bar?.call((this as _MyUnionBar).bar);
    }
    if (this is _MyUnionFoo) {
      return foo?.call((this as _MyUnionFoo).foo);
    }
    if (this is _MyUnionMyStruct) {
      return myStruct?.call((this as _MyUnionMyStruct).myStruct);
    }
    if (this is _MyUnionSdkUnknown) {
      return sdkUnknown?.call((this as _MyUnionSdkUnknown).value);
    }
    throw StateError('Unknown union value: $this');
  }

  /// Documentation for bar
  const factory MyUnion.bar(int bar) = _MyUnionBar;
  const factory MyUnion.foo(String foo) = _MyUnionFoo;
  const factory MyUnion.myStruct(_i1.MyStruct myStruct) = _MyUnionMyStruct;
  const factory MyUnion.sdkUnknown(Object value) = _MyUnionSdkUnknown;

  @override
  Map<String, Object> toJson() => when(
        bar: (bar) => {'bar': bar.toInt()},
        foo: (foo) => {'foo': foo},
        myStruct: (myStruct) => {'myStruct': myStruct.toJson()},
        sdkUnknown: (sdkUnknown) => {'sdkUnknown': sdkUnknown},
      )!;
}

class _MyUnionBar extends MyUnion {
  const _MyUnionBar(this.bar) : super._();

  @override
  final int bar;
}

class _MyUnionFoo extends MyUnion {
  const _MyUnionFoo(this.foo) : super._();

  @override
  final String foo;
}

class _MyUnionMyStruct extends MyUnion {
  const _MyUnionMyStruct(this.myStruct) : super._();

  @override
  final _i1.MyStruct myStruct;
}

class _MyUnionSdkUnknown extends MyUnion {
  const _MyUnionSdkUnknown(this.value) : super._();

  @override
  final Object value;
}
